{"version":3,"sources":["../node_modules/text-balancer/text-balancer.js","scripts/utils.js","../package.json","script.js"],"names":["intersectTop","node","onEnter","onExit","IntersectionObserver","entry","isIntersecting","top","boundingClientRect","window","innerHeight","threshold","observe","module","exports","name","version","private","scripts","start","build","postinstall","devDependencies","cssnano","eslint","sass","dependencies","browserslist","prettier","singleQuote","trailingComma","arrowParens","spectate","USE_NEWS_NAV","USE_EYE_NAV","USE_COVER_HED","IS_EMBED","DOC_URL","navbar","document","getElementById","spectateConfig","hamburgerTrigger","classList","toggle","remove","add","innerWidth","balanceText"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"../src","sourcesContent":["var candidates = [];\n\n// pass in a string of selectors to be balanced.\n// if you didnt specify any, thats ok! We'll just\n// balance anything with the balance-text class\nvar textBalancer = function (selectors) {\n\n    if (!selectors) {\n        candidates = document.querySelectorAll('.balance-text');\n    } else {\n        createSelectors(selectors);\n    }\n\n    balanceText();\n\n    var rebalanceText = debounce(function() {\n        balanceText();\n    }, 100);\n\n    window.addEventListener('resize', rebalanceText);\n}\n\n// this populates our candidates array with dom objects\n// that need to be balanced\nvar createSelectors = function(selectors) {\n    selectorArray = selectors.split(',');\n    for (var i = 0; i < selectorArray.length; i += 1) {\n        var currentSelectorElements = document.querySelectorAll(selectorArray[i].trim());\n\n        for (var j = 0; j < currentSelectorElements.length; j += 1) {\n            var currentSelectorElement = currentSelectorElements[j];\n            candidates.push(currentSelectorElement);\n        }\n    }\n}\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nvar debounce = function (func, wait, immediate) {\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n\n\n// HELPER FUNCTION -- initializes recursive binary search\nvar balanceText = function () {\n    var element;\n    var i;\n\n    for (i = 0; i < candidates.length; i += 1) {\n        element = candidates[i];\n\n        if (textElementIsMultipleLines(element)) {\n            element.style.maxWidth = '';\n            squeezeContainer(element, element.clientHeight, 0, element.clientWidth);\n        }\n\n    }\n\n}\n\n// Make the element as narrow as possible while maintaining its current height (number of lines). Binary search.\nvar squeezeContainer = function (element, originalHeight, bottomRange, topRange) {\n    var mid;\n    if (bottomRange >= topRange) {\n        element.style.maxWidth = topRange + 'px';\n        return;\n    }\n    mid = (bottomRange + topRange) / 2;\n    element.style.maxWidth = mid + 'px';\n\n    if (element.clientHeight > originalHeight) {\n        // we've squoze too far and element has spilled onto an additional line; recurse on wider range\n        squeezeContainer(element, originalHeight, mid+1, topRange);\n    } else {\n        // element has not wrapped to another line; keep squeezing!\n        squeezeContainer(element, originalHeight, bottomRange+1, mid);\n    }\n}\n\n// function to see if a headline is multiple lines\n// we only want to break if the headline is multiple lines\n//\n// We achieve this by turning the first word into a span\n// and then we compare the height of that span to the height\n// of the entire headline. If the headline is bigger than the\n// span by 10px we balance the headline.\nvar textElementIsMultipleLines = function (element) {\n    var firstWordHeight;\n    var elementHeight;\n    var HEIGHT_OFFSET;\n    var elementWords;\n    var firstWord;\n    var ORIGINAL_ELEMENT_TEXT;\n\n    ORIGINAL_ELEMENT_TEXT = element.innerHTML;\n\n    // usually there is around a 5px discrepency between\n    // the first word and the height of the whole headline\n    // so subtract the height of the headline by 10 px and\n    // we should be good\n    HEIGHT_OFFSET = 10;\n\n    // get all the words in the headline as\n    // an array -- will include punctuation\n    //\n    // this is used to put the headline back together\n    elementWords = element.innerHTML.split(' ');\n\n    // make span for first word and give it an id\n    // so we can access it in le dom\n    firstWord = document.createElement('span');\n    firstWord.id = 'element-first-word';\n    firstWord.innerHTML = elementWords[0];\n\n    // this is the entire headline\n    // as an array except for first word\n    //\n    // we will append it to the headline after the span\n    elementWords = elementWords.slice(1);\n\n    // empty the headline and append the span to it\n    element.innerHTML = '';\n    element.appendChild(firstWord);\n\n    // add the rest of the element back to it\n    element.innerHTML += ' ' + elementWords.join(' ');\n\n    // update the first word variable in the dom\n    firstWord = document.getElementById('element-first-word');\n\n    firstWordHeight = firstWord.offsetHeight;\n    elementHeight = element.offsetHeight;\n    // restore the original element text\n    element.innerHTML = ORIGINAL_ELEMENT_TEXT;\n\n    // compare the height of the element and the height of the first word\n    return elementHeight - HEIGHT_OFFSET > firstWordHeight;\n\n} // end headlineIsMultipleLines\n\nexports.balanceText = textBalancer;","export function intersectTop({ node, onEnter, onExit }) {\n  const observer = new IntersectionObserver(\n    ([entry]) => {\n      const {\n        isIntersecting,\n        boundingClientRect: { top },\n      } = entry;\n      if (!isIntersecting && top < 0) {\n        // Enter at the top\n        onEnter();\n      } else if (isIntersecting && top < window.innerHeight / 2) {\n        // Exit from the top\n        onExit();\n      }\n    },\n    { threshold: 1 },\n  );\n  observer.observe(node);\n}\n","module.exports={name:\"testmini\",version:\"0.0.0\",private:!0,scripts:{start:\"parcel src/index.html --global script\",build:\"parcel build src/index.html --global script --public-url https://spectator-static-assets.s3.amazonaws.com/testmini --no-content-hash\",postinstall:\"patch-package\"},devDependencies:{cssnano:\"^4.1.10\",eslint:\"^7.0.0\",\"parcel-bundler\":\"1.12.3\",\"patch-package\":\"^6.2.2\",\"posthtml-expressions\":\"1.4.0\",\"posthtml-include\":\"^1.4.3\",sass:\"^1.26.5\",\"@babel/helper-create-regexp-features-plugin\":\"^7.21.8\",\"@babel/core\":\"^7.21.8\"},dependencies:{\"intersection-observer\":\"^0.10.0\",\"text-balancer\":\"^1.0.5\"},browserslist:[\"defaults\"],prettier:{singleQuote:!0,trailingComma:\"all\",arrowParens:\"avoid\"},spectate:{USE_NEWS_NAV:!0,USE_EYE_NAV:!1,USE_COVER_HED:!0,IS_EMBED:!1,DOC_URL:\"https://docs.google.com/document/d/1qN0hgOL6-54wstTTVNMjrZYr9HWitL8WFciDYpKn3mM/edit\"}};","import textBalancer from 'text-balancer';\nimport initiatePage from './scripts/page';\nimport { intersectTop } from './scripts/utils';\n\nimport { spectate as spectateConfig } from '../package.json';\n\n// Main page initiation\n\ninitiatePage();\n\n// Fade in navbar at scroll trigger\n\nconst navbar = document.getElementById('navbar');\n\nconst { USE_NEWS_NAV, USE_EYE_NAV, USE_COVER_HED } = spectateConfig;\nif (USE_NEWS_NAV || USE_EYE_NAV || USE_COVER_HED) {\n  intersectTop({\n    node: document.getElementById('headline'),\n    onEnter: () => {\n      navbar.classList.remove('only-eye-logo');\n      navbar.classList.remove('hide-news-navbar');\n    },\n    onExit: () => {\n      navbar.classList.remove('show-nav-links');\n      navbar.classList.add('only-eye-logo');\n      navbar.classList.add('hide-news-navbar');\n    },\n  });\n}\n\n// Mobile navbar hamburger trigger\n\nexport function hamburgerTrigger() {\n  navbar.classList.toggle('show-nav-links');\n}\n\n// Text balance headline, deck, and image captions\n\nif (window.innerWidth <= 460) {\n  textBalancer.balanceText('#headline, .deck, .image-caption-text');\n}\n"]}